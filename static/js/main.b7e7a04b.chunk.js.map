{"version":3,"sources":["api.js","components/Dialog.jsx","components/Card.jsx","components/Spinner.jsx","components/CardList.jsx","components/Header.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["api","require","public_key","private_key","APIs","GET_CHARACTERS","handler","offset","publicKey","privateKey","timeout","query","limit","err","body","GET_CHARACTER","id","console","log","data","results","style","centerize","justifyContent","Transition","React","forwardRef","props","ref","Slide","direction","CustomDialog","Dialog","TransitionComponent","open","dialogOn","onClose","handleClose","scroll","aria-labelledby","opacity","DialogTitle","title","DialogContent","dividers","minWidth","textAlign","List","series","length","map","item","index","ListItem","key","href","resourceURI","name","stories","publicUrls","url","type","toUpperCase","DialogActions","Button","onClick","color","Card","cell","alignSelf","wrapper","position","padding","display","img","maxWidth","maxHeight","objectFit","boxShadow","transition","onClickHero","state","response","setState","items","urls","handleClickOpen","description","pic","thumbnail","tooltipOn","className","this","src","path","extension","alt","Component","useStyles","makeStyles","theme","progress","margin","spacing","Spinner","classes","width","height","paddingBottom","alignItems","paddingTop","setStyleByType","CircularProgress","CardList","showFullSpinner","isShowFullSpinner","showTopSpinner","isShowTopSpinner","showBottomSpinner","isShowBottomSpinner","checkIfDomReadyForScroll","setTimeout","requestAnimationFrame","addScrollHandler","handleScroll","event","window","scrollY","innerHeight","document","scrollHeight","removeScrollHandler","loadDirection","totalItems","scrollTo","addEventListener","removeEventListener","isInit","total","nextProps","nextState","prevProps","prevState","info","JSON","stringify","str1","str2","Header","navBar","zIndex","background","navUp","top","container","left","bottom","content","Footer","App","Fragment","CssBaseline","Container","fixed","backgroundColor","minHeight","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7e7a04b.chunk.js","sourcesContent":["var api = require('marvel-comics-api')\nconst public_key = \"e9be5c2cba5d56e48fb9fa6d4d49e356\";\nconst private_key = \"adfc41cff74520d4dcc10e25f91635fa861208a3\";\n\n\n\nconst getCharacters = (handler, offset) => api('characters', {\n    publicKey: public_key,\n    privateKey: private_key,\n    timeout: 4000,\n    query: {\n        limit: 20,\n        offset: offset\n    }\n},\n    (err, body) => {\n        if (err) {\n            throw err;\n        } else {\n            handler(body);\n        }\n    }\n);\n\n\nconst getCharacter = (id, handler) => api('characters/' + id, {\n    publicKey: public_key,\n    privateKey: private_key,\n    timeout: 10000\n},\n    (err, body) => {\n        if (err) {\n            // throw err;\n             console.log('err ', err);\n        } else {\n            console.log(body);\n            handler(body.data.results[0]);\n        }\n    }\n);\n\nconst APIs = {\n    GET_CHARACTERS: getCharacters,\n    GET_CHARACTER: getCharacter\n}\n\nexport default APIs;\n\n// https://gateway.marvel.com:443/v1/public/characters?apikey=e9be5c2cba5d56e48fb9fa6d4d49e356","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Slide from '@material-ui/core/Slide';\n\n\nconst style = {\n    centerize: {\n        justifyContent: \"center\"\n    }\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst CustomDialog = (props) => {\n    return (\n        <Dialog\n            TransitionComponent={Transition}\n            open={props.dialogOn}\n            onClose={props.handleClose}\n            scroll='body'\n            aria-labelledby=\"scroll-dialog-title\"\n            style={{opacity: 0.8}}\n        >\n            <DialogTitle id=\"scroll-dialog-title\">{props.title}</DialogTitle>\n\n            <DialogContent dividers={true} style={{ minWidth: 400, textAlign: 'center' }}>\n                <List >\n                    <h5>Appears in Series:</h5>\n                    {\n                        props.series.length > 0 ?\n                            props.series.map((item, index) => {\n                                return (\n                                    <ListItem\n                                        key={index}\n                                        href={item.resourceURI}\n                                        style={style.centerize}\n                                    >\n                                        {item.name}\n                                    </ListItem >\n                                );\n                            }) : <ListItem style={style.centerize}>  Not found. </ListItem >\n                    }\n                </List>\n                <List>\n                    <h5>Appears in Stories:</h5>\n                    {\n                        props.stories.length > 0 ?\n                            props.stories.map((item, index) => {\n                                return (\n                                    <ListItem\n                                        key={index}\n                                        href={item.resourceURI}\n                                        style={style.centerize}\n                                    >\n                                        {item.name}\n                                    </ListItem >\n                                )\n                            }) : <ListItem style={style.centerize}> Not found. </ListItem>\n                    }\n                </List>\n                <List>\n                    <h5>Official Links:</h5>\n                    {\n                        props.publicUrls.length > 0 ?\n                            props.publicUrls.map((item, index) => {\n                                return (\n                                    <ListItem key={index} style={style.centerize} >\n                                        <a href={item.url}> {item.type.toUpperCase()} </a>\n                                    </ListItem >\n                                );\n                            }) : <ListItem style={style.centerize}> Not found. </ListItem>\n                    }\n                </List>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={props.handleClose} color=\"primary\"> Close  </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default CustomDialog;","import React, { Component } from 'react';\nimport './card.css';\n// materials\nimport APIs from '../api';\nimport Dialog from './Dialog';\n// import Tooltip from './Tooltip';\n\nclass Card extends Component {\n    style = {\n        cell: {\n            alignSelf: 'center'\n        },\n        wrapper: {\n            position: 'relative',\n            padding: 0,\n            display: 'inline-flex'\n        },\n        img: {\n            maxWidth: '100%',\n            maxHeight: '100%',\n            objectFit: 'contain',\n            boxShadow: '0 9px 12px 0 rgba(0,0,0,0.4)',\n            transition: '0.4s'\n        }\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: props.item.name,\n            id: props.item.id,\n            description: props.item.description,\n            pic: props.item.thumbnail,\n            dialogOn: false,\n            series: [],\n            stories: [],\n            publicUrls: [],\n            tooltipOn: false\n        }\n    }\n\n    render() {\n        return (\n            <span className=\"cell\" style={this.style.cell}>\n                <div\n                    style={this.style.wrapper}\n                    onClick={this.onClickHero}\n                // onMouseEnter={this.openTooltip}\n                // onMouseLeave={this.closeTooltip}\n                >\n                    <img style={this.style.img}\n                        src={this.state.pic.path + '.' + this.state.pic.extension} alt=\"\"></img>\n\n                    <span className=\"overlay\">\n                        <h4>\n                            {this.state.name}\n                        </h4>\n                        <p>{this.state.description}</p> <br />\n                        <p>Click for more ...</p>\n                    </span>\n                </div>\n\n                <Dialog\n                    dialogOn={this.state.dialogOn}\n                    title={this.props.item.name}\n                    handleClose={this.handleClose}\n                    series={this.state.series}\n                    stories={this.state.stories}\n                    publicUrls={this.state.publicUrls}\n                />\n\n                {/* { for future tool tip\n                    this.state.tooltipOn === true ?\n                        <Tooltip title=\"Click for more...\" /> : null\n                } */}\n            </span>\n        )\n    }\n\n    onClickHero = () => {\n        APIs.GET_CHARACTER(this.state.id, (response) => {\n            console.log(response);\n            this.setState({ series: [...response.series.items] });\n            this.setState({ stories: [...response.stories.items] });\n            this.setState({ publicUrls: [...response.urls] });\n            this.handleClickOpen();\n        });\n    }\n\n    handleClose = () => {\n        this.setState({ dialogOn: false })\n    }\n\n    handleClickOpen = () => {\n        this.setState({ dialogOn: true });\n    };\n\n    // openTooltip = () => {\n    //     this.setState({tooltipOn: true});\n    // }\n\n    // closeTooltip = () => {\n    //     this.setState({tooltipOn: false});\n    // }\n}\n\nexport default Card;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n        margin: theme.spacing(2)\n    },\n}));\n\nconst Spinner = (props) => {\n    const classes = useStyles();\n\n    const style = {\n        bottom: {\n            width: '100%',\n            height: 140,\n            paddingBottom: 55,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        full: {\n            width: '100%',\n            height: '100vh',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n        },\n        top: {\n            width: '100%',\n            height: 140,\n            paddingTop: 60,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        }\n    }\n\n    const setStyleByType = (type) => {\n        switch (type) {\n            case 'top':\n                return style.top;\n            case 'bottom':\n                return style.bottom;\n            case 'full':\n                return style.full;\n            default:\n                return style.top;\n        }\n    }\n\n    return (\n        <div style={setStyleByType(props.type)}>\n            <CircularProgress className={classes.progress} />\n        </div>\n    );\n\n\n\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport APIs from '../api';\nimport Card from './Card';\nimport Spinner from './Spinner';\n\n// import * as data from './data.json';\n\nexport default class CardList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            offset: 0,\n            totalItems: 0,\n            isInit: true,\n            isShowFullSpinner: true,\n            isShowTopSpinner: false,\n            isShowBottomSpinner: false,\n            loadDirection: 'next'\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.showFullSpinner()}\n                {this.showTopSpinner()}\n\n                <div className=\"grid\">\n                    {this.state.data.map(item =>\n                        <Card\n                            key={item.id}\n                            item={item}\n                        />\n                    )}\n                </div>\n\n                {this.showBottomSpinner()}\n            </div>\n        );\n    }\n\n\n    componentWillMount() {\n        console.log('will mount raised');\n\n        APIs.GET_CHARACTERS((body) => {\n            console.log(body)\n            this.setState({ data: body.data.results, totalItems: body.data.total, isShowFullSpinner: false });\n        }, this.state.offset);\n    }\n\n    componentDidMount() {\n        console.log('did mount');\n        // this.addScrollHandler();\n    }\n\n\n    componentWillUpdate(nextProps, nextState) {\n        console.log('will update raised');\n\n        // if (this.state.offset !== nextState.offset) {\n        //     console.log('updated data')\n        //     APIs.GET_CHARACTERS((body) => {\n        //         this.setState({\n        //             data: body.data.results,\n        //             totalItems: body.data.total,\n        //             isShowBottomSpinner: false,\n        //             isShowTopSpinner: false,\n        //             isShowFullSpinner: false\n        //         });\n        //     }, nextState.offset);\n        // }\n\n\n    }\n\n    componentDidUpdate(prevProps, prevState, info) {\n\n        if (prevState.offset !== this.state.offset) {\n            console.log('updated data')\n            APIs.GET_CHARACTERS((body) => {\n                this.setState({\n                    data: body.data.results,\n                    totalItems: body.data.total,\n                    isShowBottomSpinner: false,\n                    isShowTopSpinner: false,\n                    isShowFullSpinner: false\n                });\n            }, this.state.offset);\n        }\n\n\n        if (JSON.stringify(this.state.data) !== JSON.stringify(prevState.data)) {\n\n            console.log('scroll top')\n            this.checkIfDomReadyForScroll();\n        }\n    }\n\n    componentWillUnmount() {\n        this.removeScrollHandler();\n    }\n\n    // ----------- spinner ----------------------------------\n    showFullSpinner = () => {\n        return this.state.isShowFullSpinner ? <Spinner type=\"full\" /> : null;\n    }\n\n    showTopSpinner = () => {\n        return this.state.isShowTopSpinner ? <Spinner type=\"top\" /> : null;\n    }\n\n    showBottomSpinner = () => {\n        return this.state.isShowBottomSpinner ? <Spinner type=\"bottom\" /> : null;\n    }\n    // ----------- spinner ------------------------------------------\n\n    // ------------------- scroll event -------------------------------\n    checkIfDomReadyForScroll = () => {\n        setTimeout(() => requestAnimationFrame(this.addScrollHandler), 0);\n    }\n\n\n    handleScroll = (event) => {\n\n        console.log(window.scrollY, window.innerHeight, document.body.scrollHeight)\n\n        if (window.scrollY === 0 && this.state.offset >= 20) {\n\n            this.removeScrollHandler();  // temparally remove scroll listener\n            console.log('loadPrev');\n            this.setState({\n                offset: this.state.offset - 20\n                , isShowTopSpinner: true, loadDirection: 'prev'\n            });\n\n            return;\n        }\n\n        if (window.scrollY >= document.body.scrollHeight - window.innerHeight - 1\n            && this.state.offset < this.state.totalItems) {\n            // if (target.scrollHeight - target.scrollTop === element.clientHeight) {\n            console.log('loadNext');\n            this.removeScrollHandler();  // temparally remove scroll listener\n            this.setState({\n                offset: this.state.offset + 20\n                , isShowBottomSpinner: true, loadDirection: 'next'\n            });\n        }\n    }\n\n    addScrollHandler = (scroll) => {\n        console.log('add scroll handler');\n        this.log('load direction : ', this.state.loadDirection)\n\n        if (this.state.loadDirection === 'next') {\n            this.log('onNext')\n            window.scrollTo(0, 60);\n            // window.screenTop = 60;\n        }\n\n        if (this.state.loadDirection === 'prev') {\n            this.log('onPrev')\n            window.scrollTo(0, document.body.scrollHeight - window.innerHeight - 60);\n            // window.screenTop = document.body.scrollHeight - window.innerHeight - 60;\n        }\n\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    removeScrollHandler = () => {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    // ------------------- scroll event -------------------------------\n    log(str1, str2 = '') {\n        console.log(str1, str2);\n    }\n}\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n    style = {\n        navBar: {\n            position: 'fixed',\n            width: '100%',\n            height: 55,\n            zIndex: 100,\n            background: 'rgba(0, 0, 0, 0.9)',\n            color: 'white',\n            transition: 'top 0.2s ease-in-out'\n        },\n        navUp: {\n            top: \" -55px;\",\n            background: 'rgba(0, 0, 0, 0.9)',\n            color: 'white'\n        }\n    }\n\n    constructor() {\n        super();\n        this.state = {\n            style: this.style.navBar\n        }\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar\" style={this.state.style} >\n                <span className=\"navbar-brand\"> <b>Marvel Wall</b></span>\n                {/* <form className=\"form-inline\">\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form> */}\n            </nav>\n        );\n    }\n\n    // componentDidMount() {\n    //     window.addEventListener('scroll', ev => this.handleScroll(ev));\n    // }\n\n    // componentWillUnmount() {\n    //     window.removeEventListener('scroll', ev => this.handleScroll(ev));\n    // }\n\n    // handleScroll = (event) => {\n    //     console.log('scroll')\n    //     let scrollTop = event.srcElement.body.scrollTop,\n    //     itemTranslate = Math.min(0, scrollTop / 3 - 60);\n    //     this.setState({\n    //         style: { ...this.style.navUp }\n    //     });\n    // }\n}\n\nexport default Header;","import React from 'react';\n\nconst style = {\n    container: {\n        width: '100%',\n        height: 50,\n        position: 'fixed',\n        left: 0,\n        bottom: 0,\n        background: 'rgba(0, 0, 0, 0.9)',\n        color: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    content: {\n    }\n}\n\nconst Footer = (props) => {\n    return (\n        <footer style={style.container}>\n            <span style={style.content}> some right reserve text. </span>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { Container } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport CardList from './components/CardList';\nimport Header from './components/Header'\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Header />\n      <Container\n        fixed\n        style={{ backgroundColor: 'white', opacity: 0.85, minHeight: '100vh' }}>\n        <CardList />\n      </Container>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}